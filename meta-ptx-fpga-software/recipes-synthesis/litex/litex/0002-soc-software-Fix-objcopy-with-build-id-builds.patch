From 226a35eb48f8ed93b63130c18688cf6f579f74c4 Mon Sep 17 00:00:00 2001
From: Michael Tretter <michael.tretter@posteo.net>
Date: Sun, 22 Aug 2021 16:38:49 +0200
Subject: [PATCH] soc/software: Fix objcopy with build-id builds

If the elf file contains the build-id, objcopy will start the binary
with the build id at address 0x0 and the text segment at the load
address creating a huge binary with a gap. Because of the large binary,
the ROM memory for the bios also needs a large size causing the
bitstream synthesis to fail.

Strip the build-id to avoid this, but there must be a better solution to
that.
---
 litex/soc/software/bios/Makefile | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/litex/soc/software/bios/Makefile b/litex/soc/software/bios/Makefile
index 6c0a6aac..8c1c4bd5 100755
--- a/litex/soc/software/bios/Makefile
+++ b/litex/soc/software/bios/Makefile
@@ -42,7 +42,7 @@ all: bios.bin
 	$(PYTHON) -m litex.soc.software.memusage bios.elf $(CURDIR)/../include/generated/regions.ld $(TRIPLE)
 
 %.bin: %.elf
-	$(OBJCOPY) -O binary $< $@
+	$(OBJCOPY) --remove-section='.note.gnu.build-id' -O binary $< $@
 ifneq ($(OS),Windows_NT)
 	chmod -x $@
 endif
-- 
2.33.0

